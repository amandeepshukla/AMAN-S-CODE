<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aman Flight Booking</title>
    <style>
         :root {
            --primary: #1a2a3a;
            --secondary: #3498db;
            --accent: #e74c3c;
            --light: #ecf0f1;
            --dark: #2c3e50;
            --success: #2ecc71;
            --warning: #f39c12;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Arial', sans-serif;
        }
        
        body {
            background-color: var(--light);
            color: var(--dark);
            overflow-x: hidden;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        header {
            background-color: var(--primary);
            color: white;
            padding: 15px 0;
            position: relative;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        }
        
        .logo {
            display: flex;
            align-items: center;
            font-size: 28px;
            font-weight: bold;
        }
        
        .logo-icon {
            margin-right: 10px;
            animation: flyPlane 3s infinite;
        }
        
        @keyframes flyPlane {
            0% {
                transform: translateY(0) rotate(0deg);
            }
            25% {
                transform: translateY(-5px) rotate(5deg);
            }
            50% {
                transform: translateY(0) rotate(0deg);
            }
            75% {
                transform: translateY(5px) rotate(-5deg);
            }
            100% {
                transform: translateY(0) rotate(0deg);
            }
        }
        
        .search-form {
            background-color: white;
            border-radius: 10px;
            padding: 25px;
            margin-top: 30px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            transform-origin: center;
            animation: formPulse 1s ease-in-out;
        }
        
        @keyframes formPulse {
            0% {
                transform: scale(0.95);
                opacity: 0.7;
            }
            70% {
                transform: scale(1.02);
            }
            100% {
                transform: scale(1);
                opacity: 1;
            }
        }
        
        .form-row {
            display: flex;
            flex-wrap: wrap;
            margin-bottom: 20px;
            gap: 15px;
        }
        
        .form-group {
            flex: 1;
            min-width: 200px;
        }
        
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: var(--dark);
        }
        
        input,
        select {
            width: 100%;
            padding: 12px;
            border: 2px solid #ddd;
            border-radius: 6px;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        
        input:focus,
        select:focus {
            border-color: var(--secondary);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.3);
            outline: none;
        }
        
        .search-btn {
            background-color: var(--accent);
            color: white;
            border: none;
            padding: 14px 30px;
            border-radius: 6px;
            font-size: 18px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin-top: 10px;
        }
        
        .search-btn:hover {
            background-color: #c0392b;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .search-btn:active {
            transform: translateY(1px);
        }
        
        .flight-list {
            margin-top: 40px;
        }
        
        .flight-card {
            background-color: white;
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            opacity: 0;
            animation: cardFadeIn 0.5s forwards;
        }
        
        .flight-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }
        
        @keyframes cardFadeIn {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        .airline {
            display: flex;
            align-items: center;
            width: 150px;
        }
        
        .airline-logo {
            width: 40px;
            height: 40px;
            background-color: #ddd;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 10px;
            font-weight: bold;
            color: var(--primary);
        }
        
        .flight-details {
            display: flex;
            flex: 1;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
        }
        
        .time {
            font-size: 24px;
            font-weight: bold;
        }
        
        .route {
            display: flex;
            align-items: center;
            flex: 1;
            justify-content: center;
            position: relative;
        }
        
        .route:after {
            content: '';
            position: absolute;
            height: 2px;
            background-color: #ddd;
            width: 60%;
            top: 50%;
        }
        
        .route-animation {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 20px;
            height: 20px;
            background-color: var(--secondary);
            border-radius: 50%;
            animation: moveAlong 3s infinite;
            z-index: 1;
        }
        
        @keyframes moveAlong {
            0% {
                left: 20%;
                transform: translateY(-50%) scale(0.8);
            }
            50% {
                transform: translateY(-50%) scale(1.2);
            }
            100% {
                left: 80%;
                transform: translateY(-50%) scale(0.8);
            }
        }
        
        .location {
            text-align: center;
            width: 100px;
        }
        
        .city {
            font-weight: bold;
        }
        
        .airport {
            font-size: 14px;
            color: #777;
        }
        
        .price {
            font-size: 28px;
            font-weight: bold;
            color: var(--accent);
            width: 150px;
            text-align: right;
        }
        
        .book-btn {
            background-color: var(--success);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 6px;
            font-size: 16px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .book-btn:hover {
            background-color: #27ae60;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }
        
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.7);
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            z-index: 999;
            color: white;
            font-size: 24px;
        }
        
        .loading-spinner {
            width: 100px;
            height: 100px;
            border: 10px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: var(--secondary);
            animation: spin 1s ease-in-out infinite;
            margin-bottom: 20px;
        }
        
        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }
        
        .notification {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: var(--warning);
            color: white;
            padding: 15px 25px;
            border-radius: 6px;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            transform: translateX(200%);
            transition: transform 0.5s cubic-bezier(0.68, -0.55, 0.27, 1.55);
            z-index: 100;
        }
        
        .notification.show {
            transform: translateX(0);
        }
        
        .hero {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            padding: 60px 0;
            text-align: center;
            color: white;
            position: relative;
            overflow: hidden;
        }
        
        .hero h1 {
            font-size: 42px;
            margin-bottom: 20px;
            position: relative;
            z-index: 2;
        }
        
        .floating-element {
            position: absolute;
            width: 60px;
            height: 60px;
            background-color: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            animation: float 15s linear infinite;
            z-index: 1;
        }
        
        @keyframes float {
            0% {
                transform: translate(0, 0) rotate(0deg);
            }
            25% {
                transform: translate(100px, 50px) rotate(90deg);
            }
            50% {
                transform: translate(200px, 0) rotate(180deg);
            }
            75% {
                transform: translate(100px, -50px) rotate(270deg);
            }
            100% {
                transform: translate(0, 0) rotate(360deg);
            }
        }
        
        .no-flights {
            text-align: center;
            padding: 40px;
            font-size: 18px;
            color: var(--dark);
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 3px 10px rgba(0, 0, 0, 0.1);
        }
        
        @media (max-width: 768px) {
            .form-group {
                min-width: 100%;
            }
            .flight-card {
                flex-direction: column;
                align-items: flex-start;
            }
            .airline,
            .flight-details,
            .price,
            .book-btn {
                width: 100%;
                margin-bottom: 15px;
                text-align: left;
            }
            .route {
                margin: 20px 0;
            }
        }
    </style>
</head>

<body>
    <div class="loading-overlay" id="loadingOverlay">
        <div class="loading-spinner"></div>
        <p>Finding the best flights for you...</p>
    </div>

    <header>
        <div class="container">
            <div class="logo">
                <div class="logo-icon">✈️</div>
                Aman Flights
            </div>
        </div>
    </header>

    <div class="hero">
        <div class="container">
            <h1>Find Your Perfect Flight</h1>
            <p>Discover amazing deals to destinations worldwide</p>
        </div>
        <div class="floating-element" style="top: 20%; left: 20%"></div>
        <div class="floating-element" style="top: 60%; left: 80%"></div>
        <div class="floating-element" style="top: 40%; left: 50%"></div>
    </div>

    <div class="container">
        <form class="search-form" id="searchForm">
            <div class="form-row">
                <div class="form-group">
                    <label for="from">From</label>
                    <input type="text" id="from" placeholder="City or Airport" required>
                </div>
                <div class="form-group">
                    <label for="to">To</label>
                    <input type="text" id="to" placeholder="City or Airport" required>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group">
                    <label for="departure">Departure Date</label>
                    <input type="date" id="departure" required>
                </div>
                <div class="form-group">
                    <label for="return">Return Date</label>
                    <input type="date" id="return">
                </div>
                <div class="form-group">
                    <label for="passengers">Passengers</label>
                    <select id="passengers" required>
                        <option value="1">1 Adult</option>
                        <option value="2">2 Adults</option>
                        <option value="3">3 Adults</option>
                        <option value="4">4 Adults</option>
                        <option value="5">5 Adults</option>
                    </select>
                </div>
            </div>
            <button type="submit" class="search-btn">Search Flights</button>
        </form>

        <div class="flight-list" id="flightList"></div>
    </div>

    <div class="notification" id="notification">Limited time offer: 15% off on international flights!</div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Airport codes for common cities
            const airportCodes = {
                'new york': 'JFK',
                'los angeles': 'LAX',
                'chicago': 'ORD',
                'dallas': 'DFW',
                'atlanta': 'ATL',
                'miami': 'MIA',
                'boston': 'BOS',
                'san francisco': 'SFO',
                'london': 'LHR',
                'paris': 'CDG',
                'tokyo': 'HND',
                'beijing': 'PEK',
                'sydney': 'SYD',
                'dubai': 'DXB',
                'rome': 'FCO',
                'toronto': 'YYZ',
                'berlin': 'BER',
                'amsterdam': 'AMS',
                'seoul': 'ICN',
                'singapore': 'SIN',
                'delhi': 'DEL',
                'mumbai': 'BOM',
                'chennai': 'MAA',
                'bangalore': 'BLR',
                'kolkata': 'CCU',
                'hyderabad': 'HYD',
                'madrid': 'MAD',
                'bangkok': 'BKK',
                'hong kong': 'HKG',
                'mexico city': 'MEX',
                'moscow': 'SVO',
                'sao paulo': 'GRU',
                'johannesburg': 'JNB',
                'cairo': 'CAI'
            };

            // Airline companies
            const airlines = [{
                code: 'AB',
                name: 'Air Blue'
            }, {
                code: 'SA',
                name: 'Sky Airways'
            }, {
                code: 'GA',
                name: 'Global Air'
            }, {
                code: 'EA',
                name: 'Express Airlines'
            }, {
                code: 'OA',
                name: 'Ocean Airways'
            }, {
                code: 'PA',
                name: 'Pacific Air'
            }, {
                code: 'FA',
                name: 'Freedom Airlines'
            }, {
                code: 'SJ',
                name: 'Sky Jet'
            }, {
                code: 'AI',
                name: 'Air India'
            }, {
                code: 'IG',
                name: 'IndiGo'
            }, {
                code: 'SG',
                name: 'SpiceJet'
            }, {
                code: 'UK',
                name: 'Vistara'
            }];

            // Exchange rate USD to INR (example rate)
            const exchangeRate = 83.5; // 1 USD = 83.5 INR

            // Form submission handling
            const searchForm = document.getElementById('searchForm');
            const loadingOverlay = document.getElementById('loadingOverlay');
            const flightList = document.getElementById('flightList');
            const notification = document.getElementById('notification');

            // Set minimum date for departure and return
            const today = new Date();
            const tomorrow = new Date(today);
            tomorrow.setDate(tomorrow.getDate() + 1);

            const formatDate = (date) => {
                return date.toISOString().split('T')[0];
            };

            document.getElementById('departure').min = formatDate(today);
            document.getElementById('return').min = formatDate(tomorrow);

            // Show notification after a delay
            setTimeout(() => {
                notification.classList.add('show');

                // Hide notification after 5 seconds
                setTimeout(() => {
                    notification.classList.remove('show');
                }, 5000);
            }, 3000);

            // Initially hide loading overlay after 1 second
            setTimeout(() => {
                loadingOverlay.style.display = 'none';
            }, 1000);

            // Form submission
            searchForm.addEventListener('submit', function(e) {
                e.preventDefault();

                // Get input values
                const fromCity = document.getElementById('from').value.trim().toLowerCase();
                const toCity = document.getElementById('to').value.trim().toLowerCase();
                const departureDate = document.getElementById('departure').value;
                const passengers = document.getElementById('passengers').value;

                // Show loading overlay
                loadingOverlay.style.display = 'flex';

                // Clear previous flight list
                flightList.innerHTML = '';

                // Generate airport codes for the cities
                let fromCode = airportCodes[fromCity] || generateAirportCode(fromCity);
                let toCode = airportCodes[toCity] || generateAirportCode(toCity);

                // Show loading for 2 seconds then display flights
                setTimeout(() => {
                    loadingOverlay.style.display = 'none';

                    // Generate dynamic flights based on user input
                    const dynamicFlights = generateFlights(fromCity, toCity, fromCode, toCode);

                    if (dynamicFlights.length > 0) {
                        // Display flights with staggered animation
                        displayFlights(dynamicFlights);
                    } else {
                        // No flights found
                        flightList.innerHTML = '<div class="no-flights">No flights found for this route. Please try different cities.</div>';
                    }
                }, 2000);
            });

            // Function to generate airport code if not in list
            function generateAirportCode(city) {
                if (!city || city.length < 3) return 'XXX';

                // Take first 3 letters and make uppercase
                return city.substring(0, 3).toUpperCase();
            }

            // Function to generate random time string
            function randomTime() {
                const hours = Math.floor(Math.random() * 24).toString().padStart(2, '0');
                const minutes = (Math.floor(Math.random() * 4) * 15).toString().padStart(2, '0');
                return `${hours}:${minutes}`;
            }

            // Function to generate random price in INR
            function randomPrice(min, max) {
                // Calculate price in USD
                const usdPrice = Math.floor(Math.random() * (max - min) + min);
                // Convert to INR and format
                const inrPrice = Math.round(usdPrice * exchangeRate);
                return '₹' + inrPrice.toLocaleString('en-IN');
            }

            // Generate flights based on user input
            function generateFlights(fromCity, toCity, fromCode, toCode) {
                // Check if cities are the same
                if (fromCity === toCity) {
                    return [];
                }

                const numFlights = Math.floor(Math.random() * 3) + 2; // 2-4 flights
                const flights = [];

                // Base price varies by destination distance (simulated)
                const basePrice = 300 + (fromCity.length + toCity.length) * 10;

                for (let i = 0; i < numFlights; i++) {
                    // Get random airline
                    const airline = airlines[Math.floor(Math.random() * airlines.length)];

                    // Create departure time
                    const departure = randomTime();

                    // Calculate random price variation
                    const price = randomPrice(basePrice - 50, basePrice + 150);

                    flights.push({
                        airline: airline.code,
                        airlineName: airline.name,
                        from: {
                            city: capitalizeWords(fromCity),
                            code: fromCode
                        },
                        to: {
                            city: capitalizeWords(toCity),
                            code: toCode
                        },
                        departure: departure,
                        arrival: randomTime(),
                        price: price
                    });
                }

                return flights;
            }

            // Helper function to capitalize words
            function capitalizeWords(str) {
                return str.split(' ')
                    .map(word => word.charAt(0).toUpperCase() + word.slice(1))
                    .join(' ');
            }

            // Display flights with delay for animation
            function displayFlights(flightData) {
                flightData.forEach((flight, index) => {
                    setTimeout(() => {
                        const flightCard = createFlightCard(flight);
                        flightList.appendChild(flightCard);
                    }, index * 300); // Stagger the appearance
                });
            }

            // Create HTML for flight card
            function createFlightCard(flight) {
                const card = document.createElement('div');
                card.className = 'flight-card';

                card.innerHTML = `
                    <div class="airline">
                        <div class="airline-logo">${flight.airline}</div>
                        <div>${flight.airlineName}</div>
                    </div>
                    <div class="flight-details">
                        <div class="time">${flight.departure}</div>
                        <div class="route">
                            <div class="location">
                                <div class="city">${flight.from.city}</div>
                                <div class="airport">${flight.from.code}</div>
                            </div>
                            <div class="route-animation"></div>
                            <div class="location">
                                <div class="city">${flight.to.city}</div>
                                <div class="airport">${flight.to.code}</div>
                            </div>
                        </div>
                        <div class="time">${flight.arrival}</div>
                    </div>
                    <div class="price">${flight.price}</div>
                    <button class="book-btn">Book Now</button>
                `;

                // Add booking button functionality
                const bookBtn = card.querySelector('.book-btn');
                bookBtn.addEventListener('click', function() {
                    // Show notification
                    notification.textContent = `Flight to ${flight.to.city} selected! Proceeding to booking...`;
                    notification.classList.add('show');

                    // Hide notification after 3 seconds
                    setTimeout(() => {
                        notification.classList.remove('show');
                    }, 3000);

                    // Add more animation to the card
                    card.style.animation = 'formPulse 0.5s ease-in-out';
                    setTimeout(() => {
                        card.style.animation = '';
                    }, 500);
                });

                return card;
            }

            // Create floating elements for the hero section with different sizes
            const hero = document.querySelector('.hero');
            for (let i = 0; i < 8; i++) {
                const floater = document.createElement('div');
                floater.className = 'floating-element';

                // Random size
                const size = Math.floor(Math.random() * 40) + 20;
                floater.style.width = `${size}px`;
                floater.style.height = `${size}px`;

                // Random position
                floater.style.left = `${Math.random() * 100}%`;
                floater.style.top = `${Math.random() * 100}%`;

                // Random animation duration
                const duration = Math.floor(Math.random() * 20) + 10;
                floater.style.animationDuration = `${duration}s`;

                // Random delay
                const delay = Math.floor(Math.random() * 5);
                floater.style.animationDelay = `${delay}s`;

                hero.appendChild(floater);
            }
        });
    </script>
</body>

</html>
