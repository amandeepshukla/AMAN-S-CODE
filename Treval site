<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Aman Travel</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        body {
            background: linear-gradient(135deg, #6e8efb, #a777e3);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            color: white;
            padding: 20px;
            overflow-x: hidden;
        }
        
        /* Loading Screen Styles */
        .loading-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(135deg, #6e8efb, #a777e3);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            z-index: 9999;
        }
        
        .loading-text {
            font-size: 1.8rem;
            font-weight: 600;
            margin-bottom: 30px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        }
        
        .animation-container {
            position: relative;
            width: 200px;
            height: 200px;
        }
        
        .airplane {
            position: absolute;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: white;
            display: flex;
            align-items: center;
            justify-content: center;
            animation: fly 3s infinite;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .airplane svg {
            width: 36px;
            height: 36px;
            fill: #3a7bd5;
        }
        
        .building {
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 80px;
            height: 120px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 10px 10px 0 0;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            overflow: hidden;
        }
        
        .building::before {
            content: '';
            position: absolute;
            top: 10px;
            left: 10px;
            width: 60px;
            height: 100px;
            background: repeating-linear-gradient(
                to bottom,
                transparent,
                transparent 15px,
                rgba(58, 123, 213, 0.3) 15px,
                rgba(58, 123, 213, 0.3) 25px
            );
        }
        
        .progress-track {
            width: 200px;
            height: 6px;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 3px;
            margin-top: 30px;
            overflow: hidden;
        }
        
        .progress-bar {
            height: 100%;
            background: white;
            border-radius: 3px;
            width: 0%;
            animation: progress 3s infinite;
        }
        
        .clouds {
            position: absolute;
            width: 100%;
            height: 100%;
        }
        
        .cloud {
            position: absolute;
            background: rgba(255, 255, 255, 0.6);
            border-radius: 50%;
        }
        
        .cloud:nth-child(1) {
            width: 30px;
            height: 20px;
            top: 40px;
            left: 20px;
            animation: floatCloud 7s infinite;
        }
        
        .cloud:nth-child(2) {
            width: 40px;
            height: 25px;
            top: 120px;
            left: -10px;
            animation: floatCloud 8s infinite 1s;
        }
        
        .cloud:nth-child(3) {
            width: 25px;
            height: 15px;
            top: 70px;
            right: 30px;
            animation: floatCloud 6s infinite 0.5s;
        }
        
        @keyframes fly {
            0% {
                top: 0;
                left: 0;
                transform: rotate(0deg);
            }
            25% {
                top: 60px;
                left: 120px;
                transform: rotate(15deg);
            }
            50% {
                top: 120px;
                left: 180px;
                transform: rotate(0deg);
            }
            75% {
                top: 60px;
                left: 60px;
                transform: rotate(-15deg);
            }
            100% {
                top: 0;
                left: 0;
                transform: rotate(0deg);
            }
        }
        
        @keyframes progress {
            0% { width: 0%; }
            50% { width: 70%; }
            100% { width: 100%; }
        }
        
        @keyframes floatCloud {
            0% { transform: translateX(0); }
            50% { transform: translateX(30px); }
            100% { transform: translateX(0); }
        }
        
        /* Main App Styles */
        .container {
            width: 100%;
            max-width: 1200px;
            position: relative;
            z-index: 2;
            opacity: 0;
            transition: opacity 0.5s ease;
        }
        
        header {
            text-align: center;
            margin-bottom: 40px;
        }
        
        h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        }
        
        p {
            font-size: 1.2rem;
            opacity: 0.9;
        }
        
        .search-container {
            background: rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(10px);
            padding: 30px;
            border-radius: 15px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }
        
        .tab-container {
            display: flex;
            margin-bottom: 20px;
        }
        
        .tab {
            padding: 12px 20px;
            background: rgba(255, 255, 255, 0.3);
            border: none;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        
        .tab:first-child {
            border-radius: 8px 0 0 8px;
        }
        
        .tab:last-child {
            border-radius: 0 8px 8px 0;
        }
        
        .tab.active {
            background: white;
            color: #6e8efb;
        }
        
        .search-input-container {
            display: flex;
            gap: 15px;
            flex-wrap: wrap;
        }
        
        .input-group {
            flex: 1;
            min-width: 200px;
        }
        
        label {
            display: block;
            margin-bottom: 5px;
            font-weight: 500;
        }
        
        input, select {
            width: 100%;
            padding: 12px 15px;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
        }
        
        button {
            padding: 12px 30px;
            background: #ff7e5f;
            border: none;
            border-radius: 8px;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-top: 20px;
        }
        
        button:hover {
            background: #ff6347;
            transform: translateY(-2px);
        }
        
        #model-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
            pointer-events: none;
        }
        
        .loading-message {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 20px;
            border-radius: 10px;
            z-index: 10;
            display: none;
        }
        
        @media (max-width: 768px) {
            .search-input-container {
                flex-direction: column;
            }
        }
    </style>
</head>
<body>
    <!-- Loading Screen -->
    <div class="loading-container" id="loading-screen">
        <div class="loading-text">Aman Travel is Loading...</div>
        
        <div class="animation-container">
            <div class="clouds">
                <div class="cloud"></div>
                <div class="cloud"></div>
                <div class="cloud"></div>
            </div>
            
            <div class="building"></div>
            
            <div class="airplane">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24">
                    <path d="M22,16.5L12,21L2,16.5V19.5L12,24L22,19.5V16.5M5.5,13.5L2,12V15L5.5,16.5V13.5M22,8.5L12,3L2,8.5L12,14L22,8.5M15.5,9.69L18.5,11L15.5,12.31V9.69M16.5,13.5V16.5L20,15V12L16.5,13.5Z" />
                </svg>
            </div>
        </div>
        
        <div class="progress-track">
            <div class="progress-bar" id="loading-progress"></div>
        </div>
    </div>

    <!-- Main App -->
    <div id="loading-3d" class="loading-message">Loading 3D Models...</div>
    
    <div class="container" id="main-content">
        <header>
            <h1>Aman Travel</h1>
            <p>Discover amazing destinations across the globe</p>
        </header>
        
        <div class="search-container">
            <div class="tab-container">
                <button class="tab active" onclick="setActiveTab(this, 'flight')">Flights</button>
                <button class="tab" onclick="setActiveTab(this, 'hotel')">Hotels</button>
            </div>
            
            <div id="flight-form">
                <div class="search-input-container">
                    <div class="input-group">
                        <label for="from">From</label>
                        <input type="text" id="from" placeholder="City or Airport">
                    </div>
                    
                    <div class="input-group">
                        <label for="to">To</label>
                        <input type="text" id="to" placeholder="City or Airport">
                    </div>
                    
                    <div class="input-group">
                        <label for="depart">Depart</label>
                        <input type="date" id="depart">
                    </div>
                    
                    <div class="input-group">
                        <label for="return">Return</label>
                        <input type="date" id="return">
                    </div>
                </div>
                
                <div class="search-input-container" style="margin-top: 15px;">
                    <div class="input-group">
                        <label for="passengers">Passengers</label>
                        <select id="passengers">
                            <option value="1">1 Passenger</option>
                            <option value="2">2 Passengers</option>
                            <option value="3">3 Passengers</option>
                            <option value="4">4 Passengers</option>
                            <option value="5">5+ Passengers</option>
                        </select>
                    </div>
                    
                    <div class="input-group">
                        <label for="class">Class</label>
                        <select id="class">
                            <option value="economy">Economy</option>
                            <option value="premium">Premium Economy</option>
                            <option value="business">Business</option>
                            <option value="first">First Class</option>
                        </select>
                    </div>
                </div>
                
                <button onclick="search('flight')">Search Flights</button>
            </div>
            
            <div id="hotel-form" style="display: none;">
                <div class="search-input-container">
                    <div class="input-group">
                        <label for="destination">Destination</label>
                        <input type="text" id="destination" placeholder="City, Region or Hotel">
                    </div>
                    
                    <div class="input-group">
                        <label for="check-in">Check-in</label>
                        <input type="date" id="check-in">
                    </div>
                    
                    <div class="input-group">
                        <label for="check-out">Check-out</label>
                        <input type="date" id="check-out">
                    </div>
                </div>
                
                <div class="search-input-container" style="margin-top: 15px;">
                    <div class="input-group">
                        <label for="rooms">Rooms</label>
                        <select id="rooms">
                            <option value="1">1 Room</option>
                            <option value="2">2 Rooms</option>
                            <option value="3">3 Rooms</option>
                            <option value="4">4 Rooms</option>
                            <option value="5">5+ Rooms</option>
                        </select>
                    </div>
                    
                    <div class="input-group">
                        <label for="guests">Guests</label>
                        <select id="guests">
                            <option value="1">1 Guest</option>
                            <option value="2">2 Guests</option>
                            <option value="3">3 Guests</option>
                            <option value="4">4 Guests</option>
                            <option value="5">5+ Guests</option>
                        </select>
                    </div>
                </div>
                
                <button onclick="search('hotel')">Search Hotels</button>
            </div>
        </div>
    </div>
    
    <div id="model-container"></div>
    
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/examples/js/loaders/GLTFLoader.js"></script>
    <script>
        // Loading screen transition
        document.addEventListener('DOMContentLoaded', () => {
            // Start main content initialization
            initMainApp();
            
            // After 3 seconds, transition to main content
            setTimeout(() => {
                // Fade out loading screen
                document.getElementById('loading-screen').style.opacity = 0;
                
                // Fade in main content
                document.getElementById('main-content').style.opacity = 1;
                
                // After transition, remove loading screen from DOM
                setTimeout(() => {
                    document.getElementById('loading-screen').style.display = 'none';
                }, 500);
            }, 3000);
        });
        
        // Main app initialization
        function initMainApp() {
            // Global variables
            let scene, camera, renderer;
            let airplane, hotel;
            let currentModel = 'airplane';
            let mouseX = 0, mouseY = 0;
            let windowHalfX = window.innerWidth / 2;
            let windowHalfY = window.innerHeight / 2;
            
            init();
            animate();
            
            function init() {
                // Create scene
                scene = new THREE.Scene();
                
                // Create camera
                camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);
                camera.position.z = 5;
                
                // Create renderer
                renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });
                renderer.setSize(window.innerWidth, window.innerHeight);
                renderer.setClearColor(0x000000, 0);
                document.getElementById('model-container').appendChild(renderer.domElement);
                
                // Add lighting
                const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
                scene.add(ambientLight);
                
                const directionalLight = new THREE.DirectionalLight(0xffffff, 1);
                directionalLight.position.set(1, 1, 1);
                scene.add(directionalLight);
                
                // Create simple geometries as placeholders until real models load
                createPlaceholderModels();
                
                // Set up event listeners
                document.addEventListener('mousemove', onDocumentMouseMove);
                window.addEventListener('resize', onWindowResize);
                
                // Initialize date inputs to today and tomorrow
                const today = new Date();
                const tomorrow = new Date(today);
                tomorrow.setDate(tomorrow.getDate() + 1);
                
                const formatDate = (date) => {
                    return date.toISOString().split('T')[0];
                };
                
                document.getElementById('depart').value = formatDate(today);
                document.getElementById('return').value = formatDate(tomorrow);
                document.getElementById('check-in').value = formatDate(today);
                document.getElementById('check-out').value = formatDate(tomorrow);
                
                // Show 3D loading message briefly
                document.getElementById('loading-3d').style.display = 'block';
                
                // After a short delay, hide 3D loading message
                setTimeout(() => {
                    document.getElementById('loading-3d').style.display = 'none';
                }, 2000);
            }
            
            function createPlaceholderModels() {
                // Create airplane placeholder
                const airplaneGeometry = new THREE.ConeGeometry(0.5, 2, 3);
                airplaneGeometry.rotateX(Math.PI / 2);
                const airplaneMaterial = new THREE.MeshPhongMaterial({ 
                    color: 0x3a7bd5,
                    shininess: 100
                });
                airplane = new THREE.Mesh(airplaneGeometry, airplaneMaterial);
                scene.add(airplane);
                
                // Create hotel placeholder
                const hotelGeometry = new THREE.BoxGeometry(1, 1.5, 1);
                const hotelMaterial = new THREE.MeshPhongMaterial({ 
                    color: 0xff7e5f,
                    shininess: 100
                });
                hotel = new THREE.Mesh(hotelGeometry, hotelMaterial);
                hotel.position.y = -10; // Hide it below the view
                scene.add(hotel);
            }
            
            function onDocumentMouseMove(event) {
                mouseX = (event.clientX - windowHalfX) / 100;
                mouseY = (event.clientY - windowHalfY) / 100;
            }
            
            function onWindowResize() {
                windowHalfX = window.innerWidth / 2;
                windowHalfY = window.innerHeight / 2;
                
                camera.aspect = window.innerWidth / window.innerHeight;
                camera.updateProjectionMatrix();
                
                renderer.setSize(window.innerWidth, window.innerHeight);
            }
            
            function animate() {
                requestAnimationFrame(animate);
                
                // Rotate models based on mouse position
                if (currentModel === 'airplane') {
                    airplane.position.y = -mouseY * 0.5;
                    airplane.position.x = mouseX * 0.5;
                    airplane.rotation.z = -mouseX * 0.2;
                    airplane.rotation.y = mouseX * 0.2;
                } else {
                    hotel.position.y = -mouseY * 0.5;
                    hotel.position.x = mouseX * 0.5;
                    hotel.rotation.y = mouseX * 0.2;
                }
                
                renderer.render(scene, camera);
            }
        }
        
        // Tab switching function
        function setActiveTab(button, type) {
            // Update tab styles
            const tabs = document.querySelectorAll('.tab');
            tabs.forEach(tab => tab.classList.remove('active'));
            button.classList.add('active');
            
            // Show/hide appropriate form
            document.getElementById('flight-form').style.display = type === 'flight' ? 'block' : 'none';
            document.getElementById('hotel-form').style.display = type === 'hotel' ? 'block' : 'none';
            
            // Get references to models (they're created in the initMainApp scope)
            const airplane = scene.getObjectByProperty('type', 'Mesh');
            const hotel = scene.children.find(obj => obj.type === 'Mesh' && obj !== airplane);
            
            // Switch 3D model
            if (type === 'flight') {
                currentModel = 'airplane';
                if (airplane) airplane.position.y = 0;
                if (hotel) hotel.position.y = -10; // Hide hotel
            } else {
                currentModel = 'hotel';
                if (hotel) hotel.position.y = 0;
                if (airplane) airplane.position.y = -10; // Hide airplane
            }
        }
        
        // Search function
        function search(type) {
            let searchData = {};
            
            if (type === 'flight') {
                searchData = {
                    from: document.getElementById('from').value,
                    to: document.getElementById('to').value,
                    depart: document.getElementById('depart').value,
                    return: document.getElementById('return').value,
                    passengers: document.getElementById('passengers').value,
                    class: document.getElementById('class').value
                };
            } else {
                searchData = {
                    destination: document.getElementById('destination').value,
                    checkIn: document.getElementById('check-in').value,
                    checkOut: document.getElementById('check-out').value,
                    rooms: document.getElementById('rooms').value,
                    guests: document.getElementById('guests').value
                };
            }
            
            // In a real application, this would send the data to a server
            console.log(`Searching for ${type}:`, searchData);
            alert(`Searching for ${type}. In a real application, this would perform a search with your criteria.`);
        }
    </script>
</body>
</html>
